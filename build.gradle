import java.util.stream.Collectors

buildscript {
	ext {
		springBootVersion = '1.5.10.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'com.example.restmvc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
	mynewconf
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '1.5.10.RELEASE'
	compile'org.webjars:materializecss:0.96.0'
	runtime('com.h2database:h2')
	runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

task getConfs {
	def allConfigurations = project.configurations.getAll()
	println 'allConfigurations size:' + allConfigurations.size()

	project.configurations.default.getAllArtifacts().each() {
		println "name of artifact : ${it.name} , ${it.getFile().name}"
	}
//	def confs = allConfigurations.keyset().stream().
//			filter((x) -> "configuration".equals(x)).
//			collect(Collectors.toList())
//	}
//
	println "dump :" + allConfigurations.dump()
}